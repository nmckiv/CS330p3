@model Fall2024_Assignment3_npmckivergan.Models.Actor

@{
    ViewData["Title"] = "Details";
}

<h1>Details</h1>

<div>
    <h4>Actor</h4>
    <hr />
    <dl class="row">
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Gender)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Gender)
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Age)
        </dt>
        <dd class = "col-sm-10">
            @Html.DisplayFor(model => model.Age)
        </dd>
        <dt class = "col-sm-2">
            IMDB
        </dt>
        <dd class = "col-sm-10">
            <a href="@Model.IMDB_link" target="_blank">@Model.IMDB_link</a>
        </dd>
        <dt class = "col-sm-2">
            @Html.DisplayNameFor(model => model.Photo)
        </dt>
        <dd class = "col-sm-10">
            @if (Model.Photo != null)
            {
                var base64 = Convert.ToBase64String(Model.Photo);
                var imgSrc = string.Format("data:image/jpg;base64,{0}", base64);
                <img src="@imgSrc" height="225" width="150" style="border-radius:10%" />
            }
        </dd>
    </dl>
</div>
<div>
    <button class="btn btn-success generate-review-btn" type="button" data-movie-id="@Model.Id">Generate New Tweet</button>
</div>
<!-- AI Generated Tweets and Sentiment Analysis -->
<div>
    <h4>Sentiment Analysis of AI-Generated Reviews</h4>
    <hr />
    <h5>Overall Sentiment: @Model.OverallSentiment</h5>
    <table class="table">
        <thead>
            <tr>
                <th scope="col">Tweet</th>
                <th scope="col">Sentiment</th>
                <th scope="col">User</th>
            </tr>
        </thead>
        <tbody id="reviewsTableBody">
            @{
                @if (Model.Tweets.Count() > 0) // Check if there are reviews
                {

                    foreach (var review in Model.Tweets)

                    {
                        <tr>
                            <td>@review.Content</td>
                            <td>@(review.Rating)</td> <!-- Ensure Rating is displayed correctly -->
                            <td>@review.ReviewerName</td>
                            <td>
                                <form asp-action="DeleteReview" asp-route-movieId="@Model.Id" asp-route-reviewId="@review.Id" method="post" style="display:inline;">
                                    <button type="submit" class="btn btn-danger">Delete</button>
                                </form>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="4">No Tweets yet</td> <!-- Updated colspan to 4 to account for Delete column -->
                    </tr>
                }
            }
        </tbody>
    </table>

<div>
    <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> |
    <a asp-action="Index">Back to List</a>
</div>
    @section Scripts {
        <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
        <script>
            $(document).ready(function() {
                $(".generate-review-btn").click(function(e) {
                    e.preventDefault(); // Prevent the default form submission

                    // Get the movie ID from a hidden input
                    var movieId = $(this).data("movie-id");

                    $.ajax({
                        url: '/Actors/GenerateReview', // URL to the GenerateReview action
                        type: 'POST',
                        data: { movieId: movieId }, // Send the movie ID
                        success: function(result) {
                            // Optionally update the reviews table with the new review
                            location.reload(); // Reload the page to reflect the new review
                        },
                        error: function(xhr, status, error) {
                            alert("An error occurred: " + xhr.responseText);
                        }
                    });
                });
            });
        </script>
    }
